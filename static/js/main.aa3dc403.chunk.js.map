{"version":3,"sources":["content/questions.ts","content/rules.ts","lib/utils.ts","components/Code.tsx","App.tsx","index.tsx"],"names":["questions","keyBy","id","title","options","value","tags","question","modusPonens","description","if","questionId","matches","answer","then","mustMatch","modusTollens","map","rule","rules","concat","Object","toConsumableArray","getValidAnswers","applicableRules","filter","option","values","every","getInvalidAnswers","difference","getApplicableRulesForProvidedAnswers","answers","isAnswered","keys","includes","Code","_ref","providedAnswers","inferredAnswers","react_default","a","createElement","prism","language","JSON","stringify","trim","App","_useState","useState","_useState2","slicedToArray","setProvidedAnswers","inferAnswers","prevInferredAnswers","arguments","length","undefined","providedAndPrevInferredAnswers","objectSpread","applicableRulesForProvidedAnswers","unansweredQuestionsById","validAnswersByQuestionId","mapValues","applicableRulesForAllValidAnswers","questionsWithOneValidAnswerLeft","layout","Content","style","background","row","gutter","col","span","card","bordered","key","opacity","height","find","es_radio","Group","buttonStyle","onChange","e","defineProperty","target","Button","disabled","some","paddingLeft","onClick","omit","tabs","defaultActiveKey","TabPane","tab","Code_Code","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.aa3dc403.chunk.js","sourcesContent":["import { Question, ById } from \"../types\";\nimport { keyBy } from \"lodash\";\n\nexport const questions: ById<Question> = keyBy(\n  [\n    {\n      id: \"component-type\",\n      title: \"type of component\",\n      options: [\n        { value: \"class\", title: \"class\" },\n        { value: \"function\", title: \"function\" },\n        { value: \"styled-component\", title: \"styled-component\" }\n      ],\n      tags: []\n    },\n\n    {\n      id: \"local-state\",\n      title: \"local state\",\n      options: [\n        { value: \"none\", title: \"none\" },\n        { value: \"class\", title: \"class\" },\n        { value: \"usestate-hook\", title: \"useState hook\" },\n        { value: \"usereducer-hook\", title: \"useReducer hook\" }\n      ],\n      tags: []\n    },\n\n    {\n      id: \"usereducer-hook-init\",\n      title: \"useReducer hook initialization\",\n      options: [\n        { value: \"none\", title: \"none\" },\n        { value: \"second-argument\", title: \"initial state as second argument\" },\n        { value: \"lazy\", title: \"lazy initialization\" }\n      ],\n      tags: []\n    },\n\n    {\n      id: \"function-definition\",\n      title: \"function definition type\",\n      options: [\n        { value: \"none\", title: \"none\" },\n        { value: \"statement\", title: \"statement\" },\n        { value: \"expression\", title: \"expression\" },\n        { value: \"arrow-function\", title: \"arrow function\" }\n      ],\n      tags: []\n    },\n\n    {\n      id: \"class-callback-binding\",\n      title: \"class callback binding\",\n      options: [\n        { value: \"none\", title: \"none\" },\n        { value: \"manual\", title: \"manual binding\" },\n        { value: \"class-fields-syntax\", title: \"class fields syntax\" },\n        { value: \"arrow-function\", title: \"arrow function in render\" }\n      ],\n      tags: []\n    }\n  ],\n  question => question.id\n);\n","import { Rule, Answer } from \"../types\";\nimport { keyBy } from \"lodash\";\n\nconst modusPonens: Rule[] = [\n  {\n    id: \"1\",\n    description: \"components with local state are functions or classes\",\n    if: {\n      questionId: \"local-state\",\n      matches: answer => answer !== \"none\"\n    },\n    then: {\n      questionId: \"component-type\",\n      mustMatch: answer => answer === \"function\" || answer === \"class\"\n    }\n  },\n\n  {\n    id: \"2\",\n    description: \"components with local state via classes are classes\",\n    if: {\n      questionId: \"local-state\",\n      matches: answer => answer === \"class\"\n    },\n    then: {\n      questionId: \"component-type\",\n      mustMatch: answer => answer === \"class\"\n    }\n  },\n\n  {\n    id: \"3\",\n    description: \"components with local state via hooks are functions\",\n    if: {\n      questionId: \"local-state\",\n      matches: answer =>\n        answer === \"usestate-hook\" || answer === \"usereducer-hook\"\n    },\n    then: {\n      questionId: \"component-type\",\n      mustMatch: answer => answer === \"function\"\n    }\n  },\n\n  {\n    id: \"4\",\n    description: \"components with function definitions are functions\",\n    if: {\n      questionId: \"function-definition\",\n      matches: answer => answer !== \"none\"\n    },\n    then: {\n      questionId: \"component-type\",\n      mustMatch: answer => answer === \"function\"\n    }\n  },\n\n  {\n    id: \"5\",\n    description: \"function components have function definitions\",\n    if: {\n      questionId: \"component-type\",\n      matches: answer => answer === \"function\"\n    },\n    then: {\n      questionId: \"function-definition\",\n      mustMatch: answer => answer !== \"none\"\n    }\n  },\n\n  {\n    id: \"6\",\n    description:\n      \"components with useReducer initialization have useReducer state\",\n    if: {\n      questionId: \"usereducer-hook-init\",\n      matches: answer => answer !== \"none\"\n    },\n    then: {\n      questionId: \"local-state\",\n      mustMatch: answer => answer === \"usereducer-hook\"\n    }\n  },\n\n  {\n    id: \"7\",\n    description:\n      \"components with useReducer local state have useReducer initialization\",\n    if: {\n      questionId: \"local-state\",\n      matches: answer => answer === \"usereducer-hook\"\n    },\n    then: {\n      questionId: \"usereducer-hook-init\",\n      mustMatch: answer => answer !== \"none\"\n    }\n  },\n\n  {\n    id: \"8\",\n    description: \"components with class callback binding are classes\",\n    if: {\n      questionId: \"class-callback-binding\",\n      matches: answer => answer !== \"none\"\n    },\n    then: {\n      questionId: \"component-type\",\n      mustMatch: answer => answer === \"class\"\n    }\n  },\n\n  {\n    id: \"9\",\n    description: \"class components have callback binding\",\n    if: {\n      questionId: \"component-type\",\n      matches: answer => answer === \"class\"\n    },\n    then: {\n      questionId: \"class-callback-binding\",\n      mustMatch: answer => answer !== \"none\"\n    }\n  }\n];\n\nconst modusTollens: Rule[] = modusPonens.map(rule => ({\n  id: \"i_\" + rule.id,\n  description: \"...\",\n  if: {\n    questionId: rule.then.questionId,\n    // type checker complains when type for `answer` isn't specified... why?!\n    matches: (answer: Answer) => !rule.then.mustMatch(answer)\n  },\n  then: {\n    questionId: rule.if.questionId,\n    mustMatch: (answer: Answer) => !rule.if.matches(answer)\n  }\n}));\n\nexport const rules = keyBy([...modusPonens, ...modusTollens], rule => rule.id);\n","import { filter, keyBy, keys, values, mapValues, difference } from \"lodash\";\nimport { ById, Answer, Question, Rule, Option } from \"../types\";\n\nexport const inferAnswers = (\n  questions: ById<Question>,\n  providedAnswers: ById<Answer>,\n  rules: ById<Rule>,\n  prevInferredAnswers: ById<Answer> = {}\n): ById<Answer> => {\n  const providedAndPrevInferredAnswers = {\n    ...providedAnswers,\n    ...prevInferredAnswers\n  };\n\n  const applicableRulesForProvidedAnswers = getApplicableRulesForProvidedAnswers(\n    providedAndPrevInferredAnswers,\n    rules\n  );\n\n  const unansweredQuestionsById = keyBy(\n    filter(\n      questions,\n      question => !isAnswered(question.id, providedAndPrevInferredAnswers)\n    ),\n    question => question.id\n  );\n\n  const validAnswersByQuestionId = mapValues(\n    unansweredQuestionsById,\n    question =>\n      getValidAnswers(question, applicableRulesForProvidedAnswers).map(\n        option => option.value\n      )\n  );\n\n  const applicableRulesForAllValidAnswers = keyBy(\n    filter(\n      rules,\n      rule =>\n        rule.if.questionId in validAnswersByQuestionId &&\n        validAnswersByQuestionId[rule.if.questionId].every(answer =>\n          rule.if.matches(answer)\n        )\n    ),\n    rule => rule.id\n  );\n\n  const questionsWithOneValidAnswerLeft = filter(\n    unansweredQuestionsById,\n    question =>\n      getValidAnswers(question, {\n        ...applicableRulesForProvidedAnswers,\n        ...applicableRulesForAllValidAnswers\n      }).length === 1\n  );\n\n  const inferredAnswers = mapValues(\n    keyBy(questionsWithOneValidAnswerLeft, question => question.id),\n    question =>\n      getValidAnswers(question, {\n        ...applicableRulesForProvidedAnswers,\n        ...applicableRulesForAllValidAnswers\n      })[0].value\n  );\n\n  if (\n    keys({ ...providedAndPrevInferredAnswers, ...inferredAnswers }).length ===\n    keys(providedAndPrevInferredAnswers).length\n  ) {\n    return prevInferredAnswers;\n  }\n\n  return inferAnswers(questions, providedAnswers, rules, {\n    ...prevInferredAnswers,\n    ...inferredAnswers\n  });\n};\n\nexport const getValidAnswers = (\n  question: Question,\n  applicableRules: ById<Rule>\n): Option[] =>\n  question.options.filter(option =>\n    values(applicableRules).every(\n      rule =>\n        rule.then.questionId !== question.id ||\n        rule.then.mustMatch(option.value)\n    )\n  );\n\nexport const getInvalidAnswers = (\n  question: Question,\n  applicableRules: ById<Rule>\n): Option[] =>\n  difference(question.options, getValidAnswers(question, applicableRules));\n\n/**\n * Only finds 'direct conflicts'. Doesn't work for something like this:\n *\n * \"component-type\": \"class\",\n * \"uses-special-setstate-hook-technique\": \"yes\"\n */\nexport const findConflicts = (\n  answers: ById<Answer>,\n  applicableRules: ById<Rule>\n): ById<Rule> => {\n  const conflicts = filter(\n    applicableRules,\n    rule =>\n      isAnswered(rule.then.questionId, answers) &&\n      !rule.then.mustMatch(answers[rule.then.questionId])\n  );\n\n  return keyBy(conflicts, rule => rule.id);\n};\n\n/**\n * Determines which rules are in force, given a collection of answers\n * and rules.\n */\nexport const getApplicableRulesForProvidedAnswers = (\n  answers: ById<Answer>,\n  rules: ById<Rule>\n): ById<Rule> => {\n  const applicableRules = filter(\n    rules,\n    rule =>\n      isAnswered(rule.if.questionId, answers) &&\n      rule.if.matches(answers[rule.if.questionId])\n  );\n\n  return keyBy(applicableRules, rule => rule.id);\n};\n\n/**\n * Determines if a question is answered, given a question id and\n * a collection of answers.\n */\nexport const isAnswered = (questionId: Question[\"id\"], answers: ById<Answer>) =>\n  keys(answers).includes(questionId);\n","// @ts-ignore\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { ById, Answer } from \"../types\";\nimport React from \"react\";\n\ntype Props = {\n  providedAnswers: ById<Answer>;\n  inferredAnswers: ById<Answer>;\n};\n\nexport const Code: React.FunctionComponent<Props> = ({\n  providedAnswers,\n  inferredAnswers\n}) => {\n  return (\n    <SyntaxHighlighter language=\"javascript\">\n      {`\n// provided answers\n${JSON.stringify(providedAnswers, null, 2)}\n\n// inferred answers\n${JSON.stringify(inferredAnswers, null, 2)}\n\n// todo: generate code from answers\n`.trim()}\n    </SyntaxHighlighter>\n  );\n};\n","import { Layout, Row, Col, Tabs, Card, Radio } from \"antd\";\nimport { questions } from \"./content/questions\";\nimport { ById, Answer, Option } from \"./types\";\nimport React, { useState } from \"react\";\nimport { rules } from \"./content/rules\";\nimport { values, omit } from \"lodash\";\nimport \"./App.css\";\nimport {\n  getApplicableRulesForProvidedAnswers,\n  getInvalidAnswers,\n  inferAnswers,\n  isAnswered\n} from \"./lib/utils\";\nimport { Code } from \"./components/Code\";\n\nconst App = () => {\n  // TODO: dark mode\n  const [providedAnswers, setProvidedAnswers] = useState({} as ById<Answer>);\n  const inferredAnswers = inferAnswers(questions, providedAnswers, rules);\n\n  return (\n    <Layout>\n      <Layout.Content style={{ background: \"#fff\" }}>\n        <Row gutter={24}>\n          <Col span={14}>\n            {values(questions).map(question => (\n              <Card\n                title={question.title}\n                bordered={false}\n                key={question.id}\n                style={{ opacity: question.id in inferredAnswers ? 0.75 : 1 }}\n              >\n                {question.id in inferredAnswers ? (\n                  <div style={{ height: 32 }}>\n                    {\n                      (questions[question.id].options.find(\n                        option => option.value === inferredAnswers[question.id]\n                      ) as Option).title\n                    }\n                  </div>\n                ) : (\n                  <Radio.Group\n                    buttonStyle=\"solid\"\n                    value={\n                      {\n                        ...inferredAnswers,\n                        ...providedAnswers\n                      }[question.id]\n                    }\n                    onChange={e => {\n                      setProvidedAnswers({\n                        ...providedAnswers,\n                        [question.id]: e.target.value\n                      });\n                    }}\n                  >\n                    {question.options.map(option => (\n                      <Radio.Button\n                        key={option.value}\n                        value={option.value}\n                        disabled={getInvalidAnswers(\n                          question,\n                          getApplicableRulesForProvidedAnswers(\n                            { ...providedAnswers, ...inferredAnswers },\n                            rules\n                          )\n                        ).some(answer => answer.value === option.value)}\n                      >\n                        {option.title}\n                      </Radio.Button>\n                    ))}\n                  </Radio.Group>\n                )}\n\n                {isAnswered(question.id, providedAnswers) && (\n                  <a\n                    style={{ paddingLeft: 8 }}\n                    onClick={() => {\n                      setProvidedAnswers(omit(providedAnswers, question.id));\n                    }}\n                  >\n                    clear\n                  </a>\n                )}\n              </Card>\n            ))}\n          </Col>\n\n          <Col span={10}>\n            <Tabs defaultActiveKey=\"1\">\n              <Tabs.TabPane tab=\"code\" key=\"1\">\n                <Code\n                  providedAnswers={providedAnswers}\n                  inferredAnswers={inferredAnswers}\n                />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}